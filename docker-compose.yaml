version: "2"

services:
  flink-JobManager:
    image: flink:latest
    container_name: flink-JobManager
    exopses:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-JobManager
    networks:
      - dev-enviroment
  
  flink-TaskManager:
    image: flink:latest
    container_name: flink-TaskManager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-JobManager
    networks:
      - dev-enviroment

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    network:
      - dev-enviroment

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - dev-enviroment

    
  namenode:
    image: bde2020/hadoop-namenode:latest
    container_name: namenode
    expose:
      - "9000"
    ports:
      - "9870:9870"
    environment:
      - CLUSTER_NAME: "dev-cluster"
    healthcheck:
      test: ["CMD", "nc", "-z", "namenode", "9870"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    networks:
      - dev-enviroment

  datanode:
    image: bde2020/hadoop-datanode:latest
    container_name: datanode
    depends_on:
      - namenode
    expose:
      - "9864"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_namenode_name_dir=file:///hadoop/dfs/name
      - HDFS_CONF_dfs_datanode_data_dir=file:///hadoop/dfs/data
      - HDFS_CONF_dfs_replication=1
    volumes:
      - ./hadoop/datanode:/hadoop/dfs/data
    networks:
      - dev-enviroment

  # zookeeper:
  #   image: bitnami/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   volumes:
  #     - "zookeeper_data:/bitnami"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   network:
  #     - dev-enviroment

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - dev-enviroment

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - networkName
    
networks:
  dev-enviroment:
    name: dev-enviroment

volumes:
  kafka_data:
    driver: local

    